{"version":3,"sources":["webpack:///./src/components/options/options.js","webpack:///./src/pages/options.js","webpack:///./src/components/options/options.module.scss"],"names":["Options","modalWindowRef","useRef","popModalWindow","popPureModal","tableColList","hide","text","genTableColTemplate","SymbolNameField","hideColState","PureFieldWithValueCheck","field","headerName","width","type","renderCell","params","moment","row","format","ColorPercentField","PercentField","fetchOptionsData","useFetch","cachePolicy","renderTable","resp","calls","puts","forEach","data","symbol","stock_price","ewma_his_vol","contracts","expiry_date","extra_data_func","calls_puts","map","cp","index","v","o","id","stockPrice","EWMAHisVol","expiryDate","lastTradeDate","undefined","strike","Number","MAX_VALUE","lastPrice","bid","ask","change","percentChange","volume","openInterest","impliedVolatility","BSM_EWMAHisVol","MC_EWMAHisVol","BT_EWMAHisVol","cnt","sum","Math","abs","concat","d","i","console","log","setCallsData","setPutsData","refreshData","Promise","all","GetDataByFetchObj","then","allResponses","length","error","current","catch","useState","callsData","putsData","setHideColState","ws","setWs","useEffect","useInterval","readyState","WebSocket","OPEN","send","onopen","onmessage","e","message","JSON","parse","className","commonStyle","defaultFont","optionsStyle","container","key","shortid","generate","table","rows","columns","rowsPerPageOptions","autoPageSize","components","NoRowsOverlay","DefaultDataGridTable","disableSelectionOnClick","onColumnVisibilityChange","param","tempHideColState","OptionsPage","StylesProvider","injectFirst","module","exports"],"mappings":"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","file":"component---src-pages-options-js-1dc1d472a69fb66f9946.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { DataGrid } from '@material-ui/data-grid'\r\nimport shortid from 'shortid'\r\nimport useFetch from 'use-http'\r\nimport moment from 'moment'\r\n\r\nimport DefaultDataGridTable from '../defaultDataGridTable'\r\nimport { useInterval, GetDataByFetchObj, SymbolNameField, PureFieldWithValueCheck, PercentField, ColorPercentField, ColorPosGreenNegRedField } from '../../common/reactUtils'\r\nimport ModalWindow from '../modalWindow'\r\n\r\nimport commonStyle from '../common.module.scss'\r\nimport optionsStyle from './options.module.scss'\r\n\r\n\r\nconst Options = () => {\r\n\r\n  const modalWindowRef = useRef({\r\n    popModalWindow: null,\r\n    popPureModal: null,\r\n  })\r\n\r\n  const tableColList = {\r\n    Symbol: { hide: false, text: 'Symbol' },\r\n    StockPrice: { hide: false, text: 'Price (Stock)' },\r\n    ExpiryDate: { hide: false, text: 'Expiry' },\r\n    Strike: { hide: false, text: 'Strike' },\r\n    LastPrice: { hide: false, text: 'Last Price' },\r\n    AvgEWMA: { hide: false, text: 'Valuation (Avg)' },\r\n    PriceBias: { hide: false, text: 'Bias (Price)' },\r\n    VolBias: { hide: false, text: 'Bias (Vol.)' },\r\n    LastTradeDate: { hide: false, text: 'Last Trade Date' },\r\n    Bid: { hide: false, text: 'Bid' },\r\n    Ask: { hide: false, text: 'Ask' },\r\n    Change: { hide: true, text: 'Change' },\r\n    PercentChange: { hide: false, text: 'Change (%)' },\r\n    Volume: { hide: false, text: 'Volume' },\r\n    OpenInterest: { hide: false, text: 'Open Interest' },\r\n    ImpliedVolatility: { hide: false, text: 'Implied Volatility' },\r\n    EWMAHisVol: { hide: false, text: 'EWMA Historical Volatility' },\r\n    BSM_EWMAHisVol: { hide: false, text: 'Black Scholes Merton' },\r\n    MC_EWMAHisVol: { hide: false, text: 'Monte Carlo' },\r\n    BT_EWMAHisVol: { hide: false, text: 'Binomial Tree' },\r\n  }\r\n\r\n  const genTableColTemplate = () => {\r\n    return [\r\n      SymbolNameField('symbol', 'Symbol', 130, 'symbol' in hideColState ? hideColState['symbol'] : false),\r\n      PureFieldWithValueCheck(\"stockPrice\", tableColList.StockPrice.text, 130, 2, \"stockPrice\" in hideColState ? hideColState[\"stockPrice\"] : tableColList['StockPrice'].hide),\r\n      {\r\n        field: 'expiryDate',\r\n        headerName: tableColList.ExpiryDate.text,\r\n        width: 125,\r\n        type: 'date',\r\n        renderCell: (params) => (\r\n          <span>{moment(params.row['expiryDate']).format('YYYY-MM-DD')}</span>\r\n        ),\r\n        hide: 'expiryDate' in hideColState ? hideColState['expiryDate'] : tableColList['ExpiryDate'].hide\r\n      },\r\n      PureFieldWithValueCheck(\"strike\", tableColList.Strike.text, 120, 2, \"strike\" in hideColState ? hideColState[\"strike\"] : tableColList['Strike'].hide),\r\n      PureFieldWithValueCheck(\"lastPrice\", tableColList.LastPrice.text, 140, 2, \"lastPrice\" in hideColState ? hideColState[\"lastPrice\"] : tableColList['LastPrice'].hide),\r\n      PureFieldWithValueCheck(\"avgEWMA\", tableColList.AvgEWMA.text, 150, 2, \"avgEWMA\" in hideColState ? hideColState[\"avgEWMA\"] : tableColList['AvgEWMA'].hide),\r\n      PureFieldWithValueCheck(\"priceBias\", tableColList.PriceBias.text, 120, 2, \"priceBias\" in hideColState ? hideColState[\"priceBias\"] : tableColList['PriceBias'].hide),\r\n      {\r\n        field: 'lastTradeDate',\r\n        headerName: tableColList.LastTradeDate.text,\r\n        width: 145,\r\n        type: 'date',\r\n        renderCell: (params) => (\r\n          <span>{moment(params.row['lastTradeDate']).format('YYYY-MM-DD')}</span>\r\n        ),\r\n        hide: 'lastTradeDate' in hideColState ? hideColState['lastTradeDate'] : tableColList['LastTradeDate'].hide\r\n      },\r\n      PureFieldWithValueCheck(\"bid\", tableColList.Bid.text, 105, 2, \"bid\" in hideColState ? hideColState[\"bid\"] : tableColList['Bid'].hide),\r\n      PureFieldWithValueCheck(\"ask\", tableColList.Ask.text, 105, 2, \"ask\" in hideColState ? hideColState[\"ask\"] : tableColList['Ask'].hide),\r\n      //ColorPosGreenNegRedField(\"change\", tableColList.Change.text, 130, \"change\" in hideColState ? hideColState[\"change\"] : tableColList['Change'].hide, 500),\r\n      ColorPercentField(\"percentChange\", tableColList.PercentChange.text, 140, 2, \"percentChange\" in hideColState ? hideColState[\"percentChange\"] : tableColList['PercentChange'].hide, 500),\r\n      PureFieldWithValueCheck(\"volume\", tableColList.Volume.text, 140, 0, \"volume\" in hideColState ? hideColState[\"volume\"] : tableColList['Volume'].hide),\r\n      PureFieldWithValueCheck(\"openInterest\", tableColList.OpenInterest.text, 140, 0, \"openInterest\" in hideColState ? hideColState[\"openInterest\"] : tableColList['OpenInterest'].hide),\r\n      PercentField(\"impliedVolatility\", tableColList.ImpliedVolatility.text, 140, \"impliedVolatility\" in hideColState ? hideColState[\"impliedVolatility\"] : tableColList['ImpliedVolatility'].hide),\r\n      PercentField(\"EWMAHisVol\", tableColList.EWMAHisVol.text, 140, \"EWMAHisVol\" in hideColState ? hideColState[\"EWMAHisVol\"] : tableColList['EWMAHisVol'].hide),\r\n      PureFieldWithValueCheck(\"BSM_EWMAHisVol\", tableColList.BSM_EWMAHisVol.text, 140, 2, \"BSM_EWMAHisVol\" in hideColState ? hideColState[\"BSM_EWMAHisVol\"] : tableColList['BSM_EWMAHisVol'].hide),\r\n      PureFieldWithValueCheck(\"MC_EWMAHisVol\", tableColList.MC_EWMAHisVol.text, 140, 2, \"MC_EWMAHisVol\" in hideColState ? hideColState[\"MC_EWMAHisVol\"] : tableColList['MC_EWMAHisVol'].hide),\r\n      PureFieldWithValueCheck(\"BT_EWMAHisVol\", tableColList.BT_EWMAHisVol.text, 140, 2, \"BT_EWMAHisVol\" in hideColState ? hideColState[\"BT_EWMAHisVol\"] : tableColList['BT_EWMAHisVol'].hide),\r\n    ]\r\n  }\r\n\r\n\r\n  const fetchOptionsData = useFetch({ cachePolicy: 'no-cache' })\r\n\r\n  const renderTable = (resp) => {\r\n    // [{\"symbol\":\"A\",\"stockPrice\":149.50999450683594,\"EWMA_historicalVolatility\":0.2519420533670158,\"contracts\":[{\"expiryDate\":\"2022-01-21\",\"calls\":[{\"lastTradeDate\":\"2022-01-12\",\"strike\":155.0,\"lastPrice\":0.32,\"bid\":0.35,\"ask\":0.5,\"change\":0.049999982,\"percentChange\":18.51851,\"volume\":30,\"openInterest\":721,\"impliedVolatility\":0.22461712890624996,\"valuationData\":{\"BSM_EWMAHisVol\":0.7042894690005248,\"MC_EWMAHisVol\":0.70279983534146,\"BT_EWMAHisVol\":0.7046023394736802}}],\"puts\":[]}]}\r\n    var calls = []\r\n    var puts = []\r\n    resp.forEach((data) => {\r\n      let symbol = data[\"symbol\"]\r\n      let stock_price = data[\"stockPrice\"]\r\n      let ewma_his_vol = data[\"EWMA_historicalVolatility\"]\r\n      data[\"contracts\"].forEach((contracts) => {\r\n        let expiry_date = contracts[\"expiryDate\"]\r\n        let extra_data_func = (calls_puts) => {\r\n          let output = calls_puts.map((cp, index) => {\r\n            let v = cp[\"valuationData\"]\r\n            let o = {\r\n              id: index,\r\n              symbol: symbol,\r\n              stockPrice: stock_price,\r\n              EWMAHisVol: ewma_his_vol,\r\n              expiryDate: expiry_date,\r\n              lastTradeDate: cp[\"lastTradeDate\"] !== undefined && cp[\"lastTradeDate\"] !== null && cp[\"lastTradeDate\"] !== '-' ? cp[\"lastTradeDate\"] : 0,\r\n              strike: cp[\"strike\"] !== undefined && cp[\"strike\"] !== null && cp[\"strike\"] !== '-' ? cp[\"strike\"] : -Number.MAX_VALUE,\r\n              lastPrice: cp[\"lastPrice\"] !== undefined && cp[\"lastPrice\"] !== null && cp[\"lastPrice\"] !== '-' ? cp[\"lastPrice\"] : -Number.MAX_VALUE,\r\n              bid: cp[\"bid\"] !== undefined && cp[\"bid\"] !== null && cp[\"bid\"] !== '-' ? cp[\"bid\"] : -Number.MAX_VALUE,\r\n              ask: cp[\"ask\"] !== undefined && cp[\"ask\"] !== null && cp[\"ask\"] !== '-' ? cp[\"ask\"] : -Number.MAX_VALUE,\r\n              change: cp[\"change\"] !== undefined && cp[\"change\"] !== null && cp[\"change\"] !== '-' ? cp[\"change\"] : -Number.MAX_VALUE,\r\n              percentChange: cp[\"percentChange\"] !== undefined && cp[\"percentChange\"] !== null && cp[\"percentChange\"] !== '-' ? cp[\"percentChange\"] / 100.0 : -Number.MAX_VALUE,\r\n              volume: cp[\"volume\"] !== undefined && cp[\"volume\"] !== null && cp[\"volume\"] !== '-' ? cp[\"volume\"] : -Number.MAX_VALUE,\r\n              openInterest: cp[\"openInterest\"] !== undefined && cp[\"openInterest\"] !== null && cp[\"openInterest\"] !== '-' ? cp[\"openInterest\"] : -Number.MAX_VALUE,\r\n              impliedVolatility: cp[\"impliedVolatility\"] !== undefined && cp[\"impliedVolatility\"] !== null && cp[\"impliedVolatility\"] !== '-' ? cp[\"impliedVolatility\"] : -Number.MAX_VALUE,\r\n              BSM_EWMAHisVol: v[\"BSM_EWMAHisVol\"] !== undefined && v[\"BSM_EWMAHisVol\"] !== null && v[\"BSM_EWMAHisVol\"] > 0 ? v[\"BSM_EWMAHisVol\"] : -Number.MAX_VALUE,\r\n              MC_EWMAHisVol: v[\"MC_EWMAHisVol\"] !== undefined && v[\"MC_EWMAHisVol\"] !== null && v[\"MC_EWMAHisVol\"] > 0 ? v[\"MC_EWMAHisVol\"] : -Number.MAX_VALUE,\r\n              BT_EWMAHisVol: v[\"BT_EWMAHisVol\"] !== undefined && v[\"BT_EWMAHisVol\"] !== null && v[\"BT_EWMAHisVol\"] > 0 ? v[\"BT_EWMAHisVol\"] : -Number.MAX_VALUE,\r\n            }\r\n            let cnt = 0\r\n            let sum = 0\r\n            if (o.BSM_EWMAHisVol > 0) {\r\n              cnt += 1\r\n              sum += o.BSM_EWMAHisVol\r\n            }\r\n            if (o.MC_EWMAHisVol > 0) {\r\n              cnt += 1\r\n              sum += o.MC_EWMAHisVol\r\n            }\r\n            if (o.BT_EWMAHisVol > 0) {\r\n              cnt += 1\r\n              sum += o.BT_EWMAHisVol\r\n            }\r\n            o[\"avgEWMA\"] = sum / cnt\r\n            o[\"priceBias\"] = Math.abs(o.lastPrice - o[\"avgEWMA\"]) / o.lastPrice\r\n            return o\r\n          })\r\n          return output\r\n        }\r\n        calls = calls.concat(extra_data_func(contracts[\"calls\"]))\r\n        puts = puts.concat(extra_data_func(contracts[\"puts\"]))\r\n      })\r\n    })\r\n\r\n    // reset id\r\n    calls.forEach((d, i) => {\r\n      calls[i].id = i\r\n    });\r\n    puts.forEach((d, i) => {\r\n      puts[i].id = i\r\n    });\r\n\r\n    console.log(calls)\r\n    setCallsData(calls)\r\n    console.log(puts)\r\n    setPutsData(puts)\r\n  }\r\n\r\n  const renderOptionsData = () => {\r\n    Promise.all([\r\n      GetDataByFetchObj('/plugin-react/option-valuation/output.json', fetchOptionsData),\r\n    ]).then((allResponses) => {\r\n      console.log(allResponses)\r\n      if (allResponses.length === 1 && allResponses[0] !== null) {\r\n        renderTable(allResponses[0])\r\n      } else {\r\n        console.error(\"renderOptionsData some data failed\")\r\n        modalWindowRef.current.popModalWindow(<div>Get some data failed...</div>)\r\n      }\r\n    }).catch(() => {\r\n      console.error(\"renderOptionsData failed\")\r\n      modalWindowRef.current.popModalWindow(<div>Get data failed...</div>)\r\n    })\r\n  }\r\n\r\n  const refreshData = () => {\r\n    renderOptionsData()\r\n  }\r\n  const [callsData, setCallsData] = useState([])\r\n  const [putsData, setPutsData] = useState([])\r\n  const [hideColState, setHideColState] = useState({})\r\n  const [ws, setWs] = useState(null)\r\n\r\n  useEffect(() => {\r\n    // componentDidMount is here!\r\n    // componentDidUpdate is here!\r\n    refreshData()\r\n\r\n    return () => {\r\n      // componentWillUnmount is here!\r\n    }\r\n  }, [])\r\n\r\n  useInterval(() => {\r\n    if (ws && ws.readyState === WebSocket.OPEN) {\r\n      ws.send(\"\") // heartbeat\r\n      console.log(\"heartbeat\")\r\n    }\r\n  }, ws ? 3000 : null)\r\n\r\n  useEffect(() => {\r\n    if (ws) {\r\n      ws.onopen = () => {\r\n        console.log('WebSocket Connected')\r\n      }\r\n      ws.onmessage = (e) => {\r\n        const message = JSON.parse(e.data)\r\n        console.log(message)\r\n        renderTable([message])\r\n        setWs(null)\r\n      }\r\n    }\r\n    return () => {\r\n    }\r\n  }, [ws])\r\n  \r\n  return (\r\n    <div className={commonStyle.defaultFont + ' ' + optionsStyle.container}>\r\n      <div key={shortid.generate()} >\r\n        <div className={optionsStyle.table}>\r\n          <DataGrid rows={callsData} columns={genTableColTemplate()} rowsPerPageOptions={[]} autoPageSize={true} components={{ NoRowsOverlay: DefaultDataGridTable, }} disableSelectionOnClick onColumnVisibilityChange={(param) => {\r\n            let tempHideColState = hideColState\r\n            tempHideColState[param['field']] = !param['isVisible']\r\n            setHideColState(tempHideColState)\r\n          }} />\r\n        </div>\r\n        <div className={optionsStyle.table}>\r\n          <DataGrid rows={putsData} columns={genTableColTemplate()} rowsPerPageOptions={[]} autoPageSize={true} components={{ NoRowsOverlay: DefaultDataGridTable, }} disableSelectionOnClick onColumnVisibilityChange={(param) => {\r\n            let tempHideColState = hideColState\r\n            tempHideColState[param['field']] = !param['isVisible']\r\n            setHideColState(tempHideColState)\r\n          }} />\r\n        </div>\r\n      </div>\r\n      <ModalWindow modalWindowRef={modalWindowRef} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Options\r\n","import React from 'react'\r\nimport { StylesProvider } from '@material-ui/core/styles'\r\n\r\nimport Options from '../components/options/options'\r\n\r\nconst OptionsPage = () => {\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <Options />\r\n    </StylesProvider>\r\n  )\r\n}\r\n\r\nexport default OptionsPage\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"options-module--container--1Ap9h\",\"optionsTableSelect\":\"options-module--optionsTableSelect--3r0T_\",\"queryPannel\":\"options-module--queryPannel--3-uHO\",\"parameterTitle\":\"options-module--parameterTitle--2fg8B\",\"parameterBlock\":\"options-module--parameterBlock--35kmB\",\"valueText\":\"options-module--valueText--3rMRe\",\"queryBtn\":\"options-module--queryBtn--2FZj5\",\"table\":\"options-module--table--3kRfA\"};"],"sourceRoot":""}