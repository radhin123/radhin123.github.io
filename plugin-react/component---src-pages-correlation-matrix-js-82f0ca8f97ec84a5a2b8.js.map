{"version":3,"sources":["webpack:///./src/components/correlation-matrix/marketCorrelationMatrix.module.scss","webpack:///./node_modules/recharts/es6/chart/LineChart.js","webpack:///./src/components/correlation-matrix/rollingCorrelationChart.js","webpack:///./src/components/correlation-matrix/marketCorrelationMatrix.js","webpack:///./src/pages/correlation-matrix.js"],"names":["module","exports","LineChart","generateCategoricalChart","chartName","GraphicalChild","Line","axisComponents","axisType","AxisComp","XAxis","YAxis","formatAxisMap","RollingCorrelationChart","data","description","style","width","window","innerWidth","height","innerHeight","maxWidth","maxHeight","ResponsiveContainer","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","dataKey","tickFormatter","tickItem","moment","format","domain","Tooltip","Legend","type","name","stroke","dot","getTableCategories","table","map","category","symbol","src","table2MatrixData","categories","reduce","acc","rowSymbolSrc","find","d","categoryCorrelations","acc2","colSymbolSrc","correlation","alpha","value","correlations","pValue","dataUrl","row","findIndex","p","column","color","Math","abs","isNaN","positiveColor","MatrixNode","popperTipRef","modalWindowRef","nodeStyle","marketCorrelationMatrixStyle","matrixNode","matrixNodeFirstRow","matrixNodeFirstColumn","message","fetch1","useFetch","cachePolicy","fetch2","className","background","onMouseOver","event","current","setOpen","currentTarget","onMouseOut","onClick","getMarketData","fetchObj","a","fileName","btoa","get","resp_data","response","ok","length","Promise","all","then","allResponses","o1","o2","convertDictData","arr","d1","d2","days","key_data_val","key_data_is_monthly_intervals","Date","parse","forEach","i","v","parseFloat","replace","dt","date_offset","getMonth","toString","padStart","getFullYear","dataDict1","dataDict2","keys","Object","filter","hasOwnProperty","bind","slidingWindowSize","startCalcTime","rollingCorrelationWindowDays","max","pcorrData","dataX","dataY","slice","e","push","x","y","sumX","sumY","sumXY","sumX2","sumY2","minLength","score","min","xi","idx","yi","sqrt","popModalWindow","catch","toFixed","PopperTip","msg","setAnchorEl","setMessage","setOpenPopper","getOpen","openPopper","useState","anchorEl","Popper","open","transition","TransitionProps","Fade","timeout","Paper","padding","whiteSpace","lineHeight","textAlign","MarketCorrelationMatrix","output","useRef","popPureModal","setTable","getCorrelationTable","console","log","useEffect","container","display","justifyItems","alignItems","gridTemplateColumns","repeat","matrixColTitle","key","shortid","generate","val","matrixRowTitle","Link","href","target","rel","CorrelationMatrixPage","StylesProvider","injectFirst"],"mappings":"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","file":"component---src-pages-correlation-matrix-js-82f0ca8f97ec84a5a2b8.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"marketCorrelationMatrix-module--container--1p1Ms\",\"matrixColTitle\":\"marketCorrelationMatrix-module--matrixColTitle--1k6mg\",\"matrixRowTitle\":\"marketCorrelationMatrix-module--matrixRowTitle--2gbB4\",\"matrixNodeFirstRow\":\"marketCorrelationMatrix-module--matrixNodeFirstRow--1RBsM\",\"matrixNodeFirstColumn\":\"marketCorrelationMatrix-module--matrixNodeFirstColumn--18OGg\",\"matrixNode\":\"marketCorrelationMatrix-module--matrixNode--3Skwx\"};","/**\n * @fileOverview Line Chart\n */\nimport { generateCategoricalChart } from './generateCategoricalChart';\nimport { Line } from '../cartesian/Line';\nimport { XAxis } from '../cartesian/XAxis';\nimport { YAxis } from '../cartesian/YAxis';\nimport { formatAxisMap } from '../util/CartesianUtils';\nexport var LineChart = generateCategoricalChart({\n  chartName: 'LineChart',\n  GraphicalChild: Line,\n  axisComponents: [{\n    axisType: 'xAxis',\n    AxisComp: XAxis\n  }, {\n    axisType: 'yAxis',\n    AxisComp: YAxis\n  }],\n  formatAxisMap: formatAxisMap\n});","import React from 'react'\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from 'recharts'\r\n\r\nimport moment from 'moment'\r\n\r\nconst RollingCorrelationChart = ({ data, description }) => {\r\n  return (\r\n    <div style={{ width: (window.innerWidth - 100) + 'px', height: (window.innerHeight - 100) + 'px', maxWidth: '1200px', maxHeight: '600px' }}>\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"Date\" tickFormatter={(tickItem) => {\r\n            return moment(tickItem).format('MM/DD/YYYY')\r\n          }} />\r\n          <YAxis domain={[-1, 1]}/>\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line type=\"monotone\" name={description} dataKey=\"Score\" stroke=\"#8884d8\" dot={false} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default RollingCorrelationChart\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport Link from '@material-ui/core/Link'\r\nimport Popper from '@material-ui/core/Popper'\r\nimport Fade from '@material-ui/core/Fade'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport shortid from 'shortid'\r\nimport useFetch from 'use-http'\r\n\r\nimport ModalWindow from '../modalWindow'\r\nimport { rollingCorrelationWindowDays } from '../../common/def'\r\nimport RollingCorrelationChart from './rollingCorrelationChart'\r\n\r\nimport marketCorrelationMatrixStyle from './marketCorrelationMatrix.module.scss'\r\n\r\nconst pcorr = (x, y) => {\r\n  let sumX = 0,\r\n    sumY = 0,\r\n    sumXY = 0,\r\n    sumX2 = 0,\r\n    sumY2 = 0;\r\n  const minLength = x.length = y.length = Math.min(x.length, y.length),\r\n    reduce = (xi, idx) => {\r\n      const yi = y[idx];\r\n      sumX += xi;\r\n      sumY += yi;\r\n      sumXY += xi * yi;\r\n      sumX2 += xi * xi;\r\n      sumY2 += yi * yi;\r\n    }\r\n  x.forEach(reduce)\r\n  return (minLength * sumXY - sumX * sumY) / Math.sqrt((minLength * sumX2 - sumX * sumX) * (minLength * sumY2 - sumY * sumY))\r\n}\r\n\r\nconst getTableCategories = (table) => {\r\n  return table.map((category) => {\r\n    return {\r\n      symbol: category.symbol,\r\n      src: category.src\r\n    }\r\n  })\r\n}\r\n\r\nconst table2MatrixData = (table) => {\r\n\r\n  const categories = getTableCategories(table)\r\n\r\n  const negativeColor = (correlation) => {\r\n    const alpha = Math.abs(correlation)\r\n    return `rgba(243, 87, 86, ${isNaN(alpha) ? 0 : alpha})`\r\n  }\r\n\r\n  const positiveColor = (correlation) => {\r\n    const alpha = Math.abs(correlation);\r\n    return `rgba(46, 233, 255, ${isNaN(alpha) ? 0 : alpha})`\r\n  }\r\n\r\n  \r\n\r\n  const parsedData = categories.reduce((acc, rowSymbolSrc) => {\r\n    const category = table.find((d) => d.symbol === rowSymbolSrc.symbol)\r\n    const categoryCorrelations = categories.reduce((acc2, colSymbolSrc) => {\r\n      const value = category.correlations[colSymbolSrc.symbol]['value']\r\n      const pValue = category.correlations[colSymbolSrc.symbol]['p_value']\r\n      const dataUrl = category['dataUrl']\r\n      const row = categories.findIndex(p => p.symbol == rowSymbolSrc.symbol)\r\n      const column = categories.findIndex(p => p.symbol == colSymbolSrc.symbol)\r\n      const color =\r\n        value < 0 ? negativeColor(value) : positiveColor(value)\r\n\r\n      return [\r\n        ...acc2,\r\n        {\r\n          colSymbolSrc,\r\n          rowSymbolSrc,\r\n          row,\r\n          column,\r\n          value,\r\n          pValue,\r\n          dataUrl,\r\n          color\r\n        }\r\n      ]\r\n    }, [])\r\n    return [...acc, ...categoryCorrelations];\r\n  }, [])\r\n\r\n  return parsedData\r\n}\r\n\r\nconst MatrixNode = ({ data, popperTipRef, modalWindowRef }) => {\r\n  let nodeStyle = marketCorrelationMatrixStyle.matrixNode\r\n  if (data.row === 0) {\r\n    nodeStyle += ' ' + marketCorrelationMatrixStyle.matrixNodeFirstRow\r\n  }\r\n\r\n  if (data.column === 0) {\r\n    nodeStyle += ' ' + marketCorrelationMatrixStyle.matrixNodeFirstColumn\r\n  }\r\n\r\n  const message = \r\n`${data.colSymbolSrc.symbol} has a ${data.value} correlation to ${data.rowSymbolSrc.symbol}\r\np-value: ${data.pValue}\r\n`\r\n  const fetch1 = useFetch({ cachePolicy: 'no-cache' })\r\n  const fetch2 = useFetch({ cachePolicy: 'no-cache' })\r\n\r\n  return (\r\n    <div className={nodeStyle}>\r\n      <div style={{ background: data.color }} onMouseOver={(event)=>{\r\n        popperTipRef.current.setOpen(true, event.currentTarget, message)\r\n      }} onMouseOut={() => {\r\n        popperTipRef.current.setOpen(false)\r\n      }} onClick={()=>{\r\n        const getMarketData = async (src, symbol, fetchObj) => {\r\n          let fileName = btoa(src + '_' + symbol) + '.json'\r\n          const resp_data = await fetchObj.get('/plugin-react/markets/' + fileName)\r\n          if (fetchObj.response.ok && resp_data.data && resp_data.data.length > 0) {\r\n            return resp_data.data\r\n          }\r\n          else {\r\n            return null\r\n          }\r\n        }\r\n\r\n        Promise.all([\r\n          getMarketData(data.colSymbolSrc.src, data.colSymbolSrc.symbol, fetch1),\r\n          getMarketData(data.rowSymbolSrc.src, data.rowSymbolSrc.symbol, fetch2),\r\n        ]).then((allResponses) => {\r\n          // console.log(allResponses)\r\n          if (allResponses.length == 2 && allResponses[0] !== null && allResponses[1] !== null) {\r\n            const overDateInterval = (d1, d2, days) => {\r\n              return Date.parse(d1) - Date.parse(d2) > days * 24 * 60 * 60 * 1000\r\n            }\r\n\r\n            const convertDictData = (arr) => {\r\n              let key_data_val = {}\r\n              const key_data_is_monthly_intervals = overDateInterval(arr[0][\"Date\"], arr[1][\"Date\"], 15)\r\n              arr.forEach((d, i) => {\r\n                let v = d[\"Close\"]\r\n                if (typeof v === 'string') {\r\n                  v = parseFloat(v.replace(\"%\", \"\"))\r\n                }\r\n\r\n                if (key_data_is_monthly_intervals) {\r\n                  let dt = Date.parse(d[\"Date\"])\r\n                  const date_offset = (dt.getMonth() + 1).toString().padStart(2, \"0\") + \"/01/\" + dt.getFullYear().toString()\r\n                  key_data_val[date_offset] = v\r\n                } else {\r\n                  key_data_val[d[\"Date\"]] = v\r\n                }\r\n              })\r\n              return key_data_val\r\n            }\r\n\r\n            let dataDict1 = convertDictData(allResponses[0])\r\n            let dataDict2 = convertDictData(allResponses[1])\r\n\r\n            const getIntersectionKey = (o1, o2) => {\r\n              return Object.keys(o1).filter({}.hasOwnProperty.bind(o2));\r\n            }\r\n\r\n            const keys = getIntersectionKey(dataDict1, dataDict2)\r\n            let slidingWindowSize = 2\r\n            let startCalcTime = Date.parse(keys[keys.length - 1]) + rollingCorrelationWindowDays * 24 * 60 * 60 * 1000\r\n            for (let i = keys.length - 2; i>=0; i--) {\r\n              if (startCalcTime <= Date.parse(keys[i])) {\r\n                slidingWindowSize = Math.max(slidingWindowSize, keys.length - 1 - i + 1)\r\n                break\r\n              }\r\n            }\r\n\r\n            let pcorrData = []\r\n            for (let i = keys.length - 1 - slidingWindowSize + 1; i >= 0; i--) {\r\n              \r\n              let dataX = []\r\n              let dataY = []\r\n              let dataWindow = keys.slice(i, i + slidingWindowSize)\r\n              dataWindow.forEach((e)=>{\r\n                dataX.push(dataDict1[e])\r\n                dataY.push(dataDict2[e])\r\n              })\r\n              let score = pcorr(dataX, dataY)\r\n              pcorrData.push({ 'Date': keys[i], 'Score': score})\r\n            }\r\n\r\n            // console.log(pcorrData)\r\n            const description = `${data.rowSymbolSrc.symbol} - ${data.colSymbolSrc.symbol} Rolling ${rollingCorrelationWindowDays} days Correlation`\r\n            modalWindowRef.current.popModalWindow(<RollingCorrelationChart data={pcorrData} description={description} />)\r\n          } else {\r\n            modalWindowRef.current.popModalWindow(<div>Load some market data failed</div>)\r\n          }\r\n        }).catch(() => {\r\n          modalWindowRef.current.popModalWindow(<div>Load market data failed</div>)\r\n        })\r\n      }}>\r\n        {data.value === 'NaN' ? 'NaN' : data.value.toFixed(2).replace(/(\\.0*|(?<=(\\..*))0*)$/, '').replace(\"0.\", \".\")}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst PopperTip = ({ popperTipRef }) =>{\r\n\r\n  // PopperTip API\r\n  popperTipRef.current = {\r\n    setOpen: (v, a=null, msg='') => {\r\n      if (v) {\r\n        setAnchorEl(a)\r\n        setMessage(msg)\r\n      }\r\n      setOpenPopper(v)\r\n    },\r\n    getOpen: () => {\r\n      return openPopper\r\n    }\r\n  }\r\n\r\n  const [openPopper, setOpenPopper] = useState(false)\r\n  const [anchorEl, setAnchorEl] = useState(null)\r\n  const [message, setMessage] = useState('')\r\n\r\n  return (\r\n    <Popper open={openPopper} anchorEl={anchorEl} transition>\r\n      {({ TransitionProps }) => (\r\n        <Fade {...TransitionProps} timeout={350}>\r\n          <Paper style={{padding: '10px'}}>\r\n            <span style={{ whiteSpace: 'pre-line', lineHeight: '20px', textAlign: 'center'}}>{message}</span>\r\n          </Paper>\r\n        </Fade>\r\n      )}\r\n    </Popper>\r\n  )\r\n}\r\n\r\nconst MarketCorrelationMatrix = () => {\r\n\r\n  const modalWindowRef = useRef({\r\n    popModalWindow: null,\r\n    popPureModal: null,\r\n  })\r\n\r\n  const popperTipRef = useRef({\r\n    setOpen: null,\r\n    getOpen: null,\r\n  })\r\n\r\n  const [table, setTable] = useState([])\r\n\r\n  const { get, response } = useFetch({ cachePolicy: 'no-cache' })\r\n  const getCorrelationTable = async () => {\r\n    const resp_data = await get('/plugin-react/market-correlation-matrix.json')\r\n    if (response.ok) {\r\n      console.log(resp_data)\r\n      setTable(resp_data['table'])\r\n    }\r\n    else {\r\n      modalWindowRef.current.popModalWindow(<div>Load market-correlation-matrix.json failed</div>)\r\n      setTable([])\r\n    }\r\n  }\r\n\r\n  const renderColumnTitle = () => {\r\n    return (\r\n      <>\r\n        <div className={marketCorrelationMatrixStyle.matrixColTitle} key={shortid.generate()}></div>\r\n        {getTableCategories(table).map((val) => {\r\n          return <div className={marketCorrelationMatrixStyle.matrixColTitle} key={shortid.generate()}>{val.symbol}</div>\r\n        })}\r\n      </>\r\n    )\r\n  }\r\n\r\n  const renderRowsTitleAndData = () => {\r\n    let output = []\r\n    table2MatrixData(table).forEach((d, i)=>{\r\n      if (i % table.length === 0) {\r\n        output.push(\r\n          <div className={marketCorrelationMatrixStyle.matrixRowTitle} key={shortid.generate()}>\r\n            <Link href={d.dataUrl} target=\"_blank\" rel=\"noreferrer noopener\">\r\n              <span>{d.rowSymbolSrc.symbol}</span>\r\n            </Link>\r\n          </div>)\r\n      }\r\n      output.push(<MatrixNode data={d} popperTipRef={popperTipRef} modalWindowRef={modalWindowRef} key={shortid.generate()} />)\r\n    })\r\n\r\n    return output\r\n  }\r\n\r\n  useEffect(() => {\r\n    // componentDidMount is here!\r\n    // componentDidUpdate is here!\r\n    getCorrelationTable()\r\n    return () => {\r\n      // componentWillUnmount is here!\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className={marketCorrelationMatrixStyle.container}>\r\n        <div style={{ display: 'grid', justifyItems: 'center', alignItems: 'center', gridTemplateColumns: '200px ' + '40px '.repeat(getTableCategories(table).length)}}>\r\n          {renderColumnTitle()}\r\n          {renderRowsTitleAndData()}\r\n        </div>\r\n      </div>\r\n      <PopperTip popperTipRef={popperTipRef}/>\r\n      <ModalWindow modalWindowRef={modalWindowRef} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MarketCorrelationMatrix\r\n","import React from 'react'\r\nimport { StylesProvider } from '@material-ui/core/styles'\r\n\r\nimport MarketCorrelationMatrix from '../components/correlation-matrix/marketCorrelationMatrix'\r\n\r\nconst CorrelationMatrixPage = () => {\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <MarketCorrelationMatrix />\r\n    </StylesProvider>\r\n  )\r\n}\r\n\r\nexport default CorrelationMatrixPage\r\n"],"sourceRoot":""}